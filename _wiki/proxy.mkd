---
title: Proxy
---

### Wget

    $ export http_proxy=http://192.168.116.1:1080
    $ export https_proxy=$http_proxy

### Curl

    $ curl --socks5 192.168.116.1:1080

### Yum

    # echo "proxy=http://192.168.116.1:1080" >> /etc/yum.conf

### Brew

    $ . ~/.export_proxy.sh

### Npm

    $ npm config set proxy http://192.168.116.1:1080
    $ npm config set https-proxy http://192.168.116.1:1080

### Yarn

    $ yarn config set proxy http://192.168.116.1:1080
    $ yarn config set https-proxy http://192.168.116.1:1080

### Git

    $ git config --global http.proxy http://192.168.116.1:1080
    $ git config --global https.proxy http://192.168.116.1:1080

### Common

    $ export HTTP_PROXY=http://192.168.116.1:1080
    $ export HTTPS_PROXY=http://192.168.116.1:1080

### Apt

    $ cat apt_proxy.conf
    Acquire::http::proxy "http://127.0.0.1:1080";
    Acquire::ftp::proxy "http://127.0.0.1:1080";
    Acquire::https::proxy "https://127.0.0.1:1080";

    $ sudo apt-get -c ~/apt_proxy.conf update

### vscode

    "http.proxy": "http://127.0.0.1:1080",
    "http.proxyStrictSSL": false,

### Docker

    # cat /etc/systemd/system/docker.service.d/http-proxy.conf
    [Service]
    Environment="HTTP_PROXY=http://127.0.0.1:8118/" "HTTPS_PROXY=http://127.0.0.1:8118/" "NO_PROXY=localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

### Privoxy

    # echo "forward-socks5 / 127.0.0.1:1080 ." >> /etc/privoxy/config

### Helm

    $ export HTTP_PROXY=http://192.168.116.1:1080
    $ export HTTPS_PROXY=http://192.168.116.1:1080
    $ export NO_PROXY="localhost,127.0.0.1,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

Note: 如果不设置 NO_PROXY 环境变量，会导致 kubectl 走代理，连接 k8s api-server 出错。

### Shadowsocks

    # yum install epel-release python-pip m2crypto
    # pip install --upgrade pip
    # pip install shadowsocks

    $ cat /etc/ss.conf 
    {
        "server":"ip",
        "server_port":6190,
        "local_address": "127.0.0.1",
        "local_port":1080,
        "password":"password",
        "timeout":300,
        "method":"aes-256-cfb",
        "fast_open": false
    }

    $ cat /etc/systemd/system/shadowsocks-client.service 
    [Unit]
    Description=Shadowsocks Client
    After=network.target

    [Service]
    Type=forking
    PIDFile=/run/shadowsocks/ss-client.pid
    PermissionsStartOnly=yes
    ExecStartPre=/bin/mkdir -p /run/shadowsocks
    ExecStartPre=/bin/chown root:root /run/shadowsocks
    ExecStart=/usr/bin/sslocal --pid-file /var/run/shadowsocks/ss-client.pid -c /etc/ss.conf -d start
    Restart=on-abort
    User=root
    Group=root
    UMask=0027

    [Install]
    WantedBy=multi-user.target

    $ sudo systemctl daemon-reload
    $ sudo systemctl start shadowsocks-client
    $ sudo systemctl enable shadowsocks-client

